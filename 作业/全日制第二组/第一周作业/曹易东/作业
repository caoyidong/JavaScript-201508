function fo(){
        var i=0;
        return function(n){
            return n+i++;
        }
    };
    var f=fo();
    var a=f(15);
    var b=fo()(15);
    var c=fo()(20);
    var d=f(20);

    分别输出：15   15   20   21

解析：定义一个小f，接收fo中return返回的结果，定义一个变量a 把f赋值给a，里面传个参数15，然后执行return的那个函数 传进去15 n就等于15 15+0++ 相当于15先和0相加  然后0在自身加以 所以第一次输出15
    第二次把fo这个大函数赋值给b 紧接着在执行里面的return出来的函数并且传参15 因为是一个全新的作用域 所以和第一次没有任何关系 所以输出的还是15
    第三次同样把fo这个大函数赋值给c 同样和上一次没有任何关系 是一个全新的作用域 所以 结果是20
    最后一次只把f 赋值给d 并且传一个参数20  和第一次是同一个作用域 所以  把20传给n 相当于20+1++ 等于21 因为第一次是0++ 它会在自身基础上累加1 所以 最后一次就像当于20+1 等于21














