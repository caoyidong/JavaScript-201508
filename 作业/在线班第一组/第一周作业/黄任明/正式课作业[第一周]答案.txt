一、基础知识填空
JS中的数据类型包含：基本数据类型和引用数据类型，基本数据类型中有 number、string、boolean、null、undefined 引用数据类型中有 object、function 而常用到的数组、正则、对象、时间...都是object对象数据类型的
  
区别：基本数据类型又称之为值类型,是直接的操作值的；引用数据类型操作的是对内存空间的引用地址；

S中如何的检测数据类型(写出四种方法)：
1.typeof
2.instanceof
3.constructor
4.Object.prototype.toString.call()

JS中判断某个值是否是一个有效数字的方法是：isNaN

想要接收函数执行的时候传递的参数，都可以如何的处理：
1.设置形参变量
2.arguments函数内置的参数集合(类数组)

将其他的数据类型转化为number类型的方式有那些：
Number()、parseInt()、parseFloat()


二、写出DOM中常用的方法和属性 
1)有一个div:<div class=”w” name=”h” id=”div1”></div>我想获取这"一个"div你有几种解决办法(不考虑兼容)
  document.getElementById("div1")
  document.getElementsByClassName("w")[0]
  document.getElementsByName("h")[0]
  document.getElementsByTagName("div")[0]
  document.querySelector("#div1")
  document.querySelector(".w")
  document.querySelector("div")
  document.querySelector("div[name='h']")
  ...

2)屏幕宽度 document.documentElement.clientWidth||document.body.clientWidth
  屏幕宽度 document.documentElement.clientHeight||document.body.clientHeight

3)获取上一个哥哥"元素"节点
  function prev(curEle){
    //判断是否兼容previousElementSibling,兼容直接的使用这个属性获取,不兼容自己在编写while循环获取
    if(curEle.previousElementSibling){
       return curEle.previousElementSibling;
    }
    var pre=curEle.previousSibling;
    while(pre && pre.nodeType!==1){
        pre=pre.previousSibling;
    }
    return pre;
  }
4)var oDiv=document.createElement("div");
  document.body.appendChild(oDiv);

5)var oDiv2=oDiv.cloneNode(true);
  document.body.insertBefore(oDiv2,oDiv);

三、数组的基础知识和应用

1)删除最后一项: ary.pop()、ary.splice(ary.length-1,1)、ary.length--
2)末尾增加元素: ary.push(100)、ary.splice(ary.length,0,100)、ary[ary.length]=100
3)克隆: ary.slice()/ary.slice(0)、ary.concat()、ary.splice(0)
4)排序: ary.sort(function(a,b){return a-b;});
5)ary.slice(n-1,m-1+1) -> ary.slice(n-1,m)

四、写出下面表达式的运算结果

[]==false -> 都转换为数字 0==0 -> true
![]==false -> ![] -> false  false==false -> true
[]==![] -> []==false -> 都转换为数字 0==0 -> true

Number(“13px”)==NaN：____false______  5+”3”-2：_______6____________

If(“3px”*3){alert(“true”)}else{alert(“false”)}：____false________If(“3px”+3){alert(“true”)}else{alert(“false”)}：____false_______

If（document.body）{alert(“ok”);}else{alert(“no”)}：________ok_______   alert([])：______false________    null==undefined：_____true___________


五、<input type="button" value="按钮1"/><input type="button" value="按钮2"/><input type="button" value="按钮3"/><input type="button" value="按钮4"/><input type="button" value="按钮5"/>

答案：作业五.html


六
    var ary=[1,2,3,4];
    function fn(ary){
        ary[0]=0;  // ary=[0,2,3,4];
        ary=[0];   // 开辟一个新的堆内存
        ary[0]=100;  //ary=[100];
        return ary; //返回 ary=[100];
    }
    var res=fn(ary);
    console.log(ary); // ary=[0,2,3,4];
    console.log(res);//ary=[100];


二、选择题：（要求写出分析步骤/画图）

1、 
	console.log(a);//定义为赋值输出undefine
	var a=12;
	function fn(){
	    console.log(a); //定义为赋值输出undefine
	    var a=13;
	}
	fn();
	console.log(a);// 输出->12 

2、
	console.log(a);//定义为赋值输出undefine
	var a=12;
	function fn(){
	    console.log(a);//输出上级作用a=12
	    a=13;
	}
	fn();//->12
	console.log(a);//->13,fn函数中有全局属性a=13 故输出13
4、
	var foo=1;
	function bar(){
	    if(!foo){//函数中foo预定义没有赋值输出undefine，undefine取反为true
		var foo=10; //foo赋值10
	    }
	    console.log(foo);//输出10
	}
	bar();//->10

5、
	var n=0;
	function a(){
	    var n=10;
	    function b(){
		n++;
		alert(n);
	    }
	    b();
	    return b;
	}
	var c=a();//把a函数的的返回值赋值给c，同时输出alert（n）->11，n为a函数作用域下的n=10，b()函数执行n++->11
	c();//把a函数执行，函数作用下的n=11，该作用域不销毁，继续执行返回值b函数，b()函数执行n++->12
	alert(n);//n为window下的作用域n=0		

6、
	var a=10,b=11,c=12;
	function test(a){
	    a=1;var b=2;c=3;
	}
	test(10);   //test函数执行，在其作用域下，定义形参a=1,预定义并赋值b=2,全局作用域c3
	alert(a);  //window下的a=10
	alert(b);  //window下的b=11
	alert(c);  //全局作用域c=3
7、
	if(!("a" in window)){//条件false
	      var a=1;	     //	带有var关键字对a进行预解释
	   }
	   alert(a);  //->undefine
8、
	var a=4;
	function b(x,y,a) { //b带参数执行 1 2 3
	    alert(a);   //- >3
	    arguments[2]=10; //a=10
	    alert(a);//->10
	}
	a=b(1,2,3);
	alert(a);//a=b(1,2,3)故->undefine
9、
	var foo='hello';
	(function(foo){
	    console.log(foo); //形参foo='hello'->'hello'
	    var foo=foo||'world';//预定义foo赋值形参 'hello'
	    console.log(foo);//->'hello'
	})(foo);
	console.log(foo);//window.foo->'hello'

10、详细分析题如图：选择题10.png
	var a=9; 
	function fn(){ 
		   a=0; 	   
	       return function(b){ 
		 return b+a++; 
	       }    
	    }
	var f=fn()
	var m=f(5);alert(m);//->5
	var n=fn()(5);alert(n); //->5
	var x=f(5);alert(x);//->6
	alert(a);//->2  fn作用域下的a

三、思考题：
1、document.parentNode的值是什么，为什么 
   document.parentNode的值null，document已经是文档的根节点

2、document.parentnode的值是什么，为什么 。

3、prototype是谁的属性，它起什么作用？__proto__是谁的属性，它有什么作用？prototype和__proto__有什么联系？
	1）prototype：每一个函数数据类型(普通函数、类)都有一个天生自带的属性
	作用：可以设置共有属性和方法

	2）__proto__：每一个对象数据类型(普通的对象、实例、prototype...)也天生自带一个属性
	作用：可以通过__proto__调用到所属类的原型属性和方法

	3）prototype和__proto__有什么联系：原型链模式


4、hasOwnProperty和in都是用来判断对象的属性的，这两个是怎么用的，有什么区别？
 1）f1.hasOwnProperty("x");//->hasOwnProperty是f1的一个属性
 2）if( f1 in window){}
 区别：hasOwnProperty可以判断是有属性和共有属性
	
5、什么是闭包，它有什么作用？
 闭包：函数运行产生的一个私有作用域
 作用：私有作用域下设置参数，使不与其他作用域参数发生冲突，全局作用域不会被污染。
